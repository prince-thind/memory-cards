{"version":3,"sources":["components/CharacterCard.js","components/GameBoard.js","components/images.js","images/1.jpg","images/2.jpg","images/3.jpg","images/4.jpg","images/5.jpg","images/6.jpg","images/7.jpg","images/8.jpg","images/9.jpg","images/10.jpg","images/11.jpg","images/12.jpg","components/InfoBar.js","App.js","index.js"],"names":["CharacterCard","props","useState","clickedStatus","setClickedStatus","useEffect","gameStatus","className","onClick","e","gameSub","src","alt","GameBoard","Fragment","characterArr","map","name","key","images","InfoBar","App","bestScore","setBestScore","score","setScore","setGameStatus","arr","i","length","push","initCharacterArr","setCharacterArr","signal","_","shuffle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LA+BeA,MA7Bf,SAAuBC,GACrB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KAqBA,OAnBAC,qBAAU,WACiB,YAArBJ,EAAMK,YACRF,GAAiB,KAElB,CAACH,EAAMK,aAgBR,qBAAKC,UAAU,YAAYC,QAd7B,SAAqBC,GACM,YAArBR,EAAMK,cAGY,IAAlBH,EACFF,EAAMS,QAAQ,SAEdN,GAAiB,GACjBH,EAAMS,QAAQ,aACdT,EAAMS,QAAQ,cAKhB,SACE,qBAAKC,IAAKV,EAAMU,IAAKC,IAAI,cAAcL,UAAU,qBCHxCM,MApBf,SAAmBZ,GACjB,OACE,cAAC,IAAMa,SAAP,UACE,qBAAKP,UAAU,YAAf,SACGN,EAAMc,aAAaC,KAAI,SAACP,GACvB,OACE,cAAC,EAAD,CAEEQ,KAAMR,EAAEQ,KACRX,WAAYL,EAAMK,WAClBI,QAAST,EAAMS,QACfC,IAAKF,EAAEE,KAJFF,EAAES,aCKNC,EAFA,CCbA,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,8BCA1B,IAA0B,+BCA1B,IAA0B,+BCA1B,IAA0B,gCCUxBC,MAVjB,SAAiBnB,GACb,MAAyB,SAArBA,EAAMK,WAEJ,qBAAKC,UAAU,eAAf,sBAE0B,QAArBN,EAAMK,WACR,qBAAKC,UAAU,cAAf,sBACK,M,gBC0EHc,MA3Ef,WACE,MAAkCnB,mBAAS,GAA3C,mBAAOoB,EAAP,KAAkBC,EAAlB,KACA,EAA0BrB,mBAAS,GAAnC,mBAAOsB,EAAP,KAAcC,EAAd,KACA,EAAoCvB,mBAAS,WAA7C,mBAAOI,EAAP,KAAmBoB,EAAnB,KACA,EAAwCxB,mBAExC,WAEE,IADA,IAAIyB,EAAM,GACDC,EAAI,EAAGA,EAAIT,EAAOU,OAAQD,IACjCD,EAAIG,KAAK,CAAEnB,IAAKQ,EAAOS,GAAIV,IAAKU,IAElC,OAAOD,EAPwCI,IAAjD,mBAAOhB,EAAP,KAAqBiB,EAArB,KA0BA,SAAStB,EAAQuB,GACf,GAAe,SAAXA,EAAJ,CAIA,GAAe,cAAXA,EAIJ,MAAe,UAAXA,GACFR,EAAS,QACTC,EAAc,iBAGD,YAAXO,GACFD,EAAgBE,IAAEC,QAAQpB,KAT1BU,EAASD,EAAQ,QAJjBE,EAAc,QAiBlB,OAnCArB,qBAAU,WACJmB,EAAQF,GACVC,EAAaC,GAEXA,GAAST,EAAac,QACxBH,EAAc,SAGf,CAACF,EAAOF,IAEXjB,qBAAU,WACW,SAAfC,GACFmB,EAAS,KAEV,CAACnB,IAsBF,sBAAKC,UAAU,MAAf,UACE,mCACE,oBAAIA,UAAU,UAAd,0BACA,qBAAIA,UAAU,iBAAd,oBACUiB,EADV,iBAC+BF,EAC7B,wBACEf,UAAU,eACVC,QAAS,WACPE,EAAQ,UAHZ,sBASF,cAAC,EAAD,CAASJ,WAAYA,EAAYoB,cAAeA,OAElD,cAAC,EAAD,CACEX,aAAcA,EACdT,WAAYA,EACZI,QAASA,QCtEjB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.f65ac527.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction CharacterCard(props) {\n  const [clickedStatus, setClickedStatus] = useState(false);\n\n  useEffect(() => {\n    if (props.gameStatus !== 'running') {\n      setClickedStatus(false);\n    }\n  }, [props.gameStatus]);\n\n  function handleClick(e) {\n    if (props.gameStatus !== 'running') {\n      return;\n    }\n    if (clickedStatus === true) {\n      props.gameSub('lost');\n    } else {\n      setClickedStatus(true);\n      props.gameSub('increment');\n      props.gameSub('shuffle');\n    }\n  }\n\n  return (\n    <div className=\"character\" onClick={handleClick}>\n      <img src={props.src} alt=\"Animal Card\" className=\"character-img\" />\n    </div>\n  );\n}\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\n\nfunction GameBoard(props) {\n  return (\n    <React.Fragment>\n      <div className=\"gameboard\">\n        {props.characterArr.map((e) => {\n          return (\n            <CharacterCard\n              key={e.key}\n              name={e.name}\n              gameStatus={props.gameStatus}\n              gameSub={props.gameSub}\n              src={e.src}\n            />\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default GameBoard;\n","import image1 from '../images/1.jpg';\nimport image2 from '../images/2.jpg';\nimport image3 from '../images/3.jpg';\nimport image4 from '../images/4.jpg';\nimport image5 from '../images/5.jpg';\nimport image6 from '../images/6.jpg';\nimport image7 from '../images/7.jpg';\nimport image8 from '../images/8.jpg';\nimport image9 from '../images/9.jpg';\nimport image10 from '../images/10.jpg';\nimport image11 from '../images/11.jpg';\nimport image12 from '../images/12.jpg';\n\nconst images = [image1, image2, image3, image4, image5, image6, image7, image8, image9, image10, image11,image12];\n\nexport default images;","export default __webpack_public_path__ + \"static/media/1.b299800c.jpg\";","export default __webpack_public_path__ + \"static/media/2.dd917475.jpg\";","export default __webpack_public_path__ + \"static/media/3.00428189.jpg\";","export default __webpack_public_path__ + \"static/media/4.eb2d13b4.jpg\";","export default __webpack_public_path__ + \"static/media/5.c47ee49c.jpg\";","export default __webpack_public_path__ + \"static/media/6.e3024926.jpg\";","export default __webpack_public_path__ + \"static/media/7.60b52218.jpg\";","export default __webpack_public_path__ + \"static/media/8.445e8477.jpg\";","export default __webpack_public_path__ + \"static/media/9.14d3f520.jpg\";","export default __webpack_public_path__ + \"static/media/10.b83e43bc.jpg\";","export default __webpack_public_path__ + \"static/media/11.3ca27bbd.jpg\";","export default __webpack_public_path__ + \"static/media/12.f2855672.jpg\";","function InfoBar(props) {\n    if (props.gameStatus === 'lost') {\n      return (\n          <div className=\"lost-bar bar\">You Lost</div>\n      );\n    } else if (props.gameStatus === 'won') {\n      return <div className=\"win-bar bar\">You Won!</div>;\n    } else return null;\n  }\n\n  export default InfoBar;","import { useState, useEffect } from 'react';\nimport GameBoard from './components/GameBoard';\nimport images from './components/images';\nimport InfoBar from './components/InfoBar';\nimport _ from 'loadsh';\n\nfunction App() {\n  const [bestScore, setBestScore] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameStatus, setGameStatus] = useState('running');\n  const [characterArr, setCharacterArr] = useState(initCharacterArr());\n\n  function initCharacterArr() {\n    let arr = [];\n    for (let i = 0; i < images.length; i++) {\n      arr.push({ src: images[i], key: i });\n    }\n    return arr;\n  }\n\n  useEffect(() => {\n    if (score > bestScore) {\n      setBestScore(score);\n    }\n    if (score >= characterArr.length) {\n      setGameStatus('won');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [score, bestScore]);\n\n  useEffect(() => {\n    if (gameStatus === 'lost') {\n      setScore(0);\n    }\n  }, [gameStatus]);\n\n  function gameSub(signal) {\n    if (signal === 'lost') {\n      setGameStatus('lost');\n      return;\n    }\n    if (signal === 'increment') {\n      setScore(score + 1);\n      return;\n    }\n    if (signal === 'reset') {\n      setScore(0);\n      setGameStatus('running');\n      return;\n    }\n    if (signal === 'shuffle') {\n      setCharacterArr(_.shuffle(characterArr));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1 className=\"heading\">Memory Cards</h1>\n        <h2 className=\"status-bar bar\">\n          Score: {score} | BestScore: {bestScore}\n          <button\n            className=\"reset-button\"\n            onClick={() => {\n              gameSub('reset');\n            }}\n          >\n            Reset\n          </button>\n        </h2>\n        <InfoBar gameStatus={gameStatus} setGameStatus={setGameStatus} />\n      </header>\n      <GameBoard\n        characterArr={characterArr}\n        gameStatus={gameStatus}\n        gameSub={gameSub}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}